; mousedrv.a65
!to "mousedrv.bin", plain
!cpu 6502

; Constants

MON_IORTS = $ff58
KSWL = $38
KSWH = $39

* = $0000

                bit   MON_IORTS         ; Set overflow flag
                bvs   BASIC_ENTRY       ; Branch always
INENTRY         sec
                bcc   BASIC_ENTRY
OENTRY          clv
                bvc   BASIC_ENTRY       ; Branch always for IN#

                !byte $01,$20
                !fill 4,<ERROR1
                !byte $00

* = $0012                               ; Entry point for mouse routines
                !byte <SETMOUSE
                !byte <SERVEMOUSE
                !byte <READMOUSE
                !byte <CLEARMOUSE
                !byte <POSMOUSE
                !byte <CLAMPMOUSE
                !byte <HOMEMOUSE
                !byte <INITMOUSE
                !fill 6,<ERROR1

BASIC_ENTRY     pha
                tya
                pha
                txa
                pha
                php
                sei
                jsr   MON_IORTS         ; Get the card slot number
                tsx
                lda   $0100,x
                tax                     ; Store $Cx in X
                asl
                asl
                asl
                asl
                tay                     ; Store $n0 in Y
                plp
                bvc   INENTRY2
                lda   KSWL
                bne   PRENTRY
                txa
                eor   KSWH
                bne   PRENTRY
                lda   #<INENTRY
                sta   KSWL
                bne   INENTRY3

INENTRY2        bcs   INENTRY3

PRENTRY         pla
                tax
                pla
                nop
                pla
                sta   $c080,y           ; Enable Mouse = 1
                rts

INENTRY3        sta   $c081,y
                pla
                pla
                tay
                pla
                ldx   #17               ; Return 17 bytes of status
                lda   #$8d
                sta   $0200,x           ; Get the value of the buffer
                rts

* = $006d

SETMOUSE        cmp   #$10              ; Check that the mode is less than 0x10
                bcs   ERROR
                sta   $c082,y
                rts
SERVEMOUSE      pha
                clc
                bcc   SERVEMOUSE1
SERVEMOUSE2     lda   $c083,y
                bne   SERVEMOUSE3
                sec                     ; There is no interrupt return error
SERVEMOUSE3     pla
                rts
CLAMPMOUSE      cmp   #$02              ; Only accept 0 for X and 1 for Y
                bcs   ERROR
                sta   $c083,y
                rts
READMOUSE       lda   #$04
                sta   $c083,y
                clc
                nop
                nop
                rts
INITMOUSE       nop
                lda   #$02
CALL_ENTRY      sta   $c083,y
                clc
                rts
CLEARMOUSE      nop
                lda   #$05
                bne   CALL_ENTRY
POSMOUSE        nop
                lda   #$06
                bne   CALL_ENTRY
HOMEMOUSE       nop
                lda   #$07
                bne   CALL_ENTRY
ERROR1          ldx   #$03
ERROR           sec
                rts

SERVEMOUSE1     php
                lda   $00
                pha
                lda   #$60
                sta   $00
                sei
                jsr   $0000
                tsx
                pla
                sta   $00
                lda   $0100,x
                plp
                tax
                asl
                asl
                asl
                asl
                tay
                lda   #$03
                clc
                bcc   SERVEMOUSE2

* = $00fb
                !byte $d6,$ff,$ff,$ff,$01
